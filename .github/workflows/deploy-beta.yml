name: Build & Deploy on Beta

on:
  release:
    types: [prereleased]

concurrency: build-and-deploy-beta

env:
  SENTRY_URL: https://sentry.io/
  SENTRY_PROJECT: hodari
  SENTRY_ORG: hodari
  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  android:
    name: Android App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: npm install ci

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '2.7.7'
          bundler-cache: false

      - name: Install Ruby dependencies
        run: bundle install

      - name: Linter
        run: npm run lint

      - name: Grant rights
        working-directory: android
        run: chmod +x build.gradle

      - name: Cache Gradle Wrapper
        uses: actions/cache@v3
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Cache Gradle Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('android/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle-caches-

      - name: Get release note from release description
        run: |
          echo "${{ github.event.release.body }}"
          echo "${{ github.event.release.body }}" > ./fastlane/metadata/android/fr-FR/changelogs/default.txt

      - name: Get release version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v*}"
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v*}" >> $GITHUB_ENV

      - name: Bump version
        uses: chkfung/android-version-actions@v1.2
        with:
          gradlePath: android/app/build.gradle
          versionName: ${{ env.RELEASE_VERSION }}

      - name: Create Playstore creds file
        run: echo -n "${{ secrets.GOOGLE_PLAYSTORE_API_CREDS }}" | base64 -d > ./fastlane/google-playstore-api-creds.json

      - name: Create keystore file
        run: echo -n "${{ secrets.HODARI_UPLOAD_STORE_FILE }}" | base64 -d > ./android/app/hodari.keystore

      - name: Create properties file
        run: |
          mkdir -p ~/.gradle
          echo "${{ secrets.HODARI_GRADLE_PROPERTIES }}" > ~/.gradle/gradle.properties

      - name: Setup Fastlane
        run: bundle install

      - name: Build and deploy app
        run: fastlane android beta
        env:
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_REPO_TOKEN_64 }}
          VERSION_NUMBER: ${{ env.RELEASE_VERSION }}

  ios:
    name: iOS App
    runs-on: macos-15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Node.js dependencies
        run: npm install ci

      - name: Cache iOS dependencies
        id: cache-ios-dependencies
        uses: actions/cache@v4
        with:
          path: ios/Pods
          key: ${{ hashFiles('**/Podfile.lock') }}
      - name: Install iOS dependencies
        if: steps.cache-ios-dependencies.outputs.cache-hit != 'true'
        run: pod install
        working-directory: ios

      - name: Get release version
        run: |
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v*}" | awk -F"-" '{print $1}'
          echo "RELEASE_VERSION=${GITHUB_REF#refs/tags/v*}" | awk -F"-" '{print $1}' >> $GITHUB_ENV

      - name: Get release note from release description
        run: |
          echo "${{ github.event.release.body }}"
          echo "${{ github.event.release.body }}" > ./fastlane/metadata/fr-FR/release_notes.txt

      - name: Build and deploy app
        run: fastlane ios beta
        env:
          APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APPSTORE_CONNECT_API_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APPSTORE_CONNECT_API_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APPSTORE_CONNECT_API_KEY }}
          MATCH_PASSWORD: ${{ secrets.FASTLANE_MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.GIT_REPO_TOKEN_64 }}
          VERSION_NUMBER: ${{ env.RELEASE_VERSION }}
